package com.Lifam_Ragor.ScreenRobot;


import javax.swing.*;
import java.awt.*;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;

public class ScreenRobot extends MyFrame {
    private JPanel contentPanel;
    private JButton screenTransportBtn;
    private JButton screenRecordBtn;
    private JButton screenCaptureBtn;
    private JPanel topControlPanel;
    private JPanel mainViewPanel;
    private JPanel mainControlPanel;

    private ImageViewPanel imageViewPanel;
    private JPanel captureControlPanel;
    private JPanel recordControlPanel;
    private JPanel transportControlPanel;

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                setSystemLookAndFeel();
                ScreenRobot frame = new ScreenRobot("ScreenRobot");
                frame.setContentPane(frame.contentPanel);
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.setMinimumSize(MinimumSize);
                frame.pack();
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
            }
        });
    }

    public ScreenRobot(String title) {
        super(title);

        dataInit();
        viewInit();
        actionInit();
    }

    private void dataInit() {

    }

    private void viewInit() {
        imageViewPanel = new ImageViewPanel();
        mainViewPanel.add(imageViewPanel, BorderLayout.CENTER);

        mainControlPanel.setPreferredSize(new Dimension(100, 0));

        transportControlPanel = new TransportControlPanel(ScreenRobot.this);
        mainControlPanel.add(transportControlPanel, "transportControlPanel");

        captureControlPanel = new CaptureControlPanel(ScreenRobot.this);
        mainControlPanel.add(captureControlPanel, "captureControlCard");

        recordControlPanel = new RecordControlPanel(ScreenRobot.this);
        mainControlPanel.add(recordControlPanel, "recordControlCard");

        setPreferredSize(new Dimension(1040, 600));
//        mainControlPanel.setMinimumSize(new Dimension(200, 0));
    }

    private void actionInit() {
        addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
                super.componentResized(e);

//                System.out.println(getWidth() + " " + getHeight());
//                updateSize();
            }
        });

        screenCaptureBtn.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                ((CardLayout) mainControlPanel.getLayout()).show(mainControlPanel, "captureControlCard");
            }
        });
        screenRecordBtn.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                ((CardLayout) mainControlPanel.getLayout()).show(mainControlPanel, "recordControlCard");
            }
        });
        screenTransportBtn.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                ((CardLayout) mainControlPanel.getLayout()).show(mainControlPanel, "transportControlPanel");
            }
        });
    }

    private void createUIComponents() {
    }

//    private void updateSize() {
//
//    }

    @Override
    public void setDisplayPanel(BufferedImage image) {
        imageViewPanel.setImage(image);
    }

    @Override
    public void frameAfterAdjustment() {
//        setLocationRelativeTo(null);
        setVisible(true);
    }

    public ImageViewPanel getDisplayPanel() {
        return imageViewPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPanel = new JPanel();
        contentPanel.setLayout(new BorderLayout(0, 0));
        contentPanel.setDoubleBuffered(true);
        contentPanel.setInheritsPopupMenu(false);
        contentPanel.setMinimumSize(new Dimension(900, 600));
        contentPanel.setName("");
        contentPanel.setOpaque(false);
        contentPanel.setPreferredSize(new Dimension(900, 600));
        topControlPanel = new JPanel();
        topControlPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        topControlPanel.setDoubleBuffered(true);
        contentPanel.add(topControlPanel, BorderLayout.NORTH);
        topControlPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        screenTransportBtn = new JButton();
        screenTransportBtn.setText("投屏");
        topControlPanel.add(screenTransportBtn);
        screenRecordBtn = new JButton();
        screenRecordBtn.setText("录屏");
        topControlPanel.add(screenRecordBtn);
        screenCaptureBtn = new JButton();
        screenCaptureBtn.setText("截屏");
        topControlPanel.add(screenCaptureBtn);
        mainViewPanel = new JPanel();
        mainViewPanel.setLayout(new BorderLayout(0, 0));
        mainViewPanel.setDoubleBuffered(true);
        mainViewPanel.setPreferredSize(new Dimension(100, 79));
        contentPanel.add(mainViewPanel, BorderLayout.CENTER);
        mainControlPanel = new JPanel();
        mainControlPanel.setLayout(new CardLayout(0, 0));
        mainControlPanel.setDoubleBuffered(true);
        mainControlPanel.setMinimumSize(new Dimension(100, 4));
        mainControlPanel.setPreferredSize(new Dimension(100, 79));
        mainViewPanel.add(mainControlPanel, BorderLayout.WEST);
        mainControlPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPanel;
    }
}
